</main>
<footer class="page-footer foot">
    <div class="container">
        <div class="row">
            <div class="col s12 m4 l8">
                <h5 class="white-text">About Us</h5>
                <p class="grey-text text-lighten-4">SeedersBlock is a decentralized social media platform based on Ethereum blockchain technology that supports
                    community building and social interaction with cryptocurrency rewards.Getseeds Token can be exchanged
                    for goods & services on our inbuilt marketplace.</p>
            </div>
            <div class="col s12 m4 l2">
                <h5 class="white-text">Links</h5>
                <ul>
                    <li>
                        <a class="grey-text text-lighten-3" href="#!">Charity Projects & Events</a>
                    </li>
                    <li>
                        <a class="grey-text text-lighten-3" href="#!">Contacts</a>
                    </li>
                    <li>
                        <a class="grey-text text-lighten-3" href="#!">Jobs</a>
                    </li>
                    <li>
                        <a class="grey-text text-lighten-3" href="#!">FAQ</a>
                    </li>
                </ul>
            </div>
            <div class="col s12 m4 l2">
                <h5 class="white-text">Youtube</h5>
                <ul>
                    <li>
                        <img class="responsive-img" src="https://youtu.be/L7cRgJw6NDI">
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <div class="footer-copyright">
        <div class="container">
            Â© 2018 Copyright SeedersBlock
            <a class="grey-text text-lighten-4 right" href="#!">More Links</a>
        </div>
    </div>
</footer>
<!-- Compiled and minified JavaScript -->
<script src="//ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script>
    window.jQuery || document.write('<script src="js/vendor/jquery-3.2.1.min.js"><\/script>')
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-rc.2/js/materialize.min.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script src="https://unpkg.com/pusher-feeds-client@0.10.0"></script>
<script>
    var socket = io.connect();

    const feeds = new Feeds({
        instanceLocator: "v1:us1:f46083f7-c203-4839-a1f9-ea2466d85075"
    });

    var follow = feeds.feed("follow");
    var commentSeed = feeds.feed("comment-seed");
    var likeStream = feeds.feed("like-stream");
    var commentStream = feeds.feed("comment-stream");
    var message = feeds.feed("message");
    $('.search-icon').click(function () {
        $('.search-mobile').toggle();
        $('.notifications-list').hide();
    });

    $('.close-search').click(function() {
        $('.search-mobile').hide();
        $('.search-mobile #search').val("");
    });
    $('.notifications-trigger').click(function() {
        $('.notifications-list').toggle();
        $('.search-mobile').hide();
    });
    $('.notifications .badge').hide();
    $.getJSON('/notifications')
    .done(notifications => {
        if (notifications.docs.every(notification => notification.is_read)) {
            $('.notifications .badge').hide();
        } else {
            $('.notifications .badge').show();
        }
        notifications.docs.reverse().forEach(notification => {
            if (notification.is_read) {
                $('.notification-items').prepend(`<li style="background-color: #edf2fa; position: relative;" class="notification-item" id="${notification._id}">
                    <div class="wrapper">
                        <div class="left">
                            <div class="avatar">
                                <img class="notification-avatar" src="${notification.sender.avatar}" alt="">
                            </div>
                            <div class="notification-data">
                                <span class="user"><a href="/${notification.sender.username}">${notification.sender.firstname} ${notification.sender.lastname}</a></span>
                                <span class="info">${notification.content}</span>
                            </div>
                        </div>
                        <span class="created">9/6/2018 14:03</span>
                        <a class="wrap-link" href="${notification.path}">Click</a>
                    </div>
                </li>`);   
            } else {
                $('.notification-items').prepend(`<li class="notification-item" style="position: relative;" id="${notification._id}">
                    <div class="wrapper">
                        <div class="left">
                            <div class="avatar">
                                <img class="notification-avatar" src="${notification.sender.avatar}" alt="">
                            </div>
                            <div class="notification-data">
                                <span class="user"><a href="/${notification.sender.username}">${notification.sender.firstname} ${notification.sender.lastname}</a></span>
                                <span class="info">${notification.content}</span>
                            </div>
                        </div>
                        <span class="created">9/6/2018 14:03</span>
                        <a class="wrap-link" href="${notification.path}">Click</a>
                    </div>
                </li>`);      
            }
        })
    })
    .fail(err => console.log(err));
    $('.notification-items').on("click", ".notification-item:first", function(e) {
        $(this).css("background-color", "#edf2fa");
    });
    $('.notification-items').on("click", ".notification-item", function(e) {
        e.stopPropagation();
        var id = $(this).attr("id");
        var that = this;
        console.log(id);
        if (id) {
            $.ajax({
                url: '/notification/' + id,
                method: "PUT"
            })
            .done(msg => {
                $(that).css("background-color", "#edf2fa");
            })
            .fail(err => console.log(err));
        }
        
    });
    
var currentUser;
var currentConversation;
$.getJSON('/user').done(user => {
    currentUser = user;
    return currentUser;
}).then(currentUser => {
    follow.subscribe({
        onOpen: () => {
            console.log("Follow Feeds: Connection Established");
        },
        onItem: item => {
            if ( currentUser && item.data.user.following.indexOf(currentUser._id) === (item.data.user.following.length - 1) && currentUser.followers.indexOf(item.data.user._id) === (currentUser.followers.length - 1) && !( item.data.user._id ==currentUser._id) ) {
                    $('.notifications .badge').show();
                    $('.notification-items').prepend(`<li class="notification-item" style="position: relative;">
                        <div class="wrapper">
                            <div class="left">
                                <div class="avatar">
                                    <img class="notification-avatar" src="${item.data.user.avatar}" alt="">
                                </div>
                                <div class="notification-data">
                                    <span class="user"><a href="/${item.data.user.username}">${item.data.user.firstname} ${item.data.user.lastname}</a></span>
                                    <span class="info">just followed you</span>
                                </div>
                            </div>
                            <span class="created">9/6/2018 14:03</span>
                            <a class="wrap-link" href="/${item.data.user.username}">Click</a>
                        </div>
                    </li>`);
                }
        },
        onError: error => {
            console.error("Feeds error: " + error);
        }
    });

    commentSeed.subscribe({
        onOpen: () => {
            console.log("Seed Comment Feeds: Connection Established");
        },
        onItem: item => {
            if ( currentUser && currentUser._id === item.data.receiver ) {
                    $('.notifications .badge').show();
                    $('.notification-items').prepend(`<li class="notification-item" style="position: relative;">
                        <div class="wrapper">
                            <div class="left">
                                <div class="avatar">
                                    <img class="notification-avatar" src="${item.data.sender.avatar}" alt="">
                                </div>
                                <div class="notification-data">
                                    <span class="user"><a href="/${item.data.sender.username}">${item.data.sender.firstname} ${item.data.sender.lastname}</a></span>
                                    <span class="info">${item.data.text}</span>
                                </div>
                            </div>
                            <span class="created">9/6/2018 14:03</span>
                            <a class="wrap-link" href="${item.data.path}">Click</a>
                        </div>
                    </li>`);
                }
        },
        onError: error => {
            console.error("Feeds error: " + error);
        }
    });

    likeStream.subscribe({
        onOpen: () => {
            console.log("Stream Like Feeds: Connection Established");
        },
        onItem: item => {
            if ( currentUser && currentUser._id === item.data.receiver ) {
                    $('.notifications .badge').show();
                    $('.notification-items').prepend(`<li class="notification-item" style="position: relative;">
                        <div class="wrapper">
                            <div class="left">
                                <div class="avatar">
                                    <img class="notification-avatar" src="${item.data.sender.avatar}" alt="">
                                </div>
                                <div class="notification-data">
                                    <span class="user"><a href="/${item.data.sender.username}">${item.data.sender.firstname} ${item.data.sender.lastname}</a></span>
                                    <span class="info">${item.data.text}</span>
                                </div>
                            </div>
                            <span class="created">9/6/2018 14:03</span>
                            <a class="wrap-link" href="${item.data.path}">Click</a>
                        </div>
                    </li>`);
                }
        },
        onError: error => {
            console.error("Feeds error: " + error);
        }
    });

    commentStream.subscribe({
        onOpen: () => {
            console.log("Stream Comment Feeds: Connection Established");
        },
        onItem: item => {
            if ( currentUser && currentUser._id === item.data.receiver ) {
                    $('.notifications .badge').show();
                    $('.notification-items').prepend(`<li class="notification-item" style="position: relative;">
                        <div class="wrapper">
                            <div class="left">
                                <div class="avatar">
                                    <img class="notification-avatar" src="${item.data.sender.avatar}" alt="">
                                </div>
                                <div class="notification-data">
                                    <span class="user"><a href="/${item.data.sender.username}">${item.data.sender.firstname} ${item.data.sender.lastname}</a></span>
                                    <span class="info">${item.data.text}</span>
                                </div>
                            </div>
                            <span class="created">9/6/2018 14:03</span>
                            <a class="wrap-link" href="${item.data.path}">Click</a>
                        </div>
                    </li>`);
                    $('#comments_' + item.data.streamId).append('<div id="comment_' + item.data.streamId + '"><div class="right remove-comment"><button id="' + item.data.streamId + '" class="btn-floating btn-small waves-effect waves-light light-teal comment-delete"><i class="material-icons">delete</i></button></div><div class="valign-wrapper"><div class="user-avatar"><img src="'+ item.data.sender.avatar + '" alt="" class="circle responsive-img"></div><div class="comment-meta"><span class="black-text">' + item.data.sender.username + '</span><br><span class="grey-text">' + item.data.time.toLocaleTimeString() + '</span></div></div><p>' + item.data.comment + '</p></div>'
                    );
                }
        },
        onError: error => {
            console.error("Feeds error: " + error);
        }
    });

    message.subscribe({
        onOpen: () => {
            console.log("Message Feeds: Connection Established");
        },
        onItem: item => {
            console.log(item.data);
            if ( currentUser && currentUser._id === item.data.receiver ) {
                    $('.notifications .badge').show();
                    $('.notification-items').prepend(`<li class="notification-item" style="position: relative;">
                        <div class="wrapper">
                            <div class="left">
                                <div class="avatar">
                                    <img class="notification-avatar" src="${item.data.sender.avatar}" alt="">
                                </div>
                                <div class="notification-data">
                                    <span class="user"><a href="/${item.data.sender.username}">${item.data.sender.firstname} ${item.data.sender.lastname}</a></span>
                                    <span class="info">just messaged you</span>
                                </div>
                            </div>
                            <span class="created">9/6/2018 14:03</span>
                            <a class="wrap-link" href="${item.data.path}">Click</a>
                        </div>
                    </li>`);
                }
        },
        onError: error => {
            console.error("Feeds error: " + error);
        }
    });

    socket.emit('new-user', currentUser.username);
    currentUser = currentUser;

    return currentUser;
}).then(currentUser => {
    var friends =  $.getJSON('/friends');
    return friends;
}).then(function(friends) {
    // get active chats
    var date_sort_desc = function (conversation1, conversation2) {
      if (conversation1.lastUpdated > conversation2.lastUpdated) return -1;
      if (conversation1.lastUpdated < conversation2.lastUpdated) return 1;
      return 0;
    };
    activeChats = currentUser.conversations.sort(date_sort_desc);
    activeChats.forEach(chat => {
        if (chat.participants) {
            chat.participants.forEach(name => {
                if (name !== currentUser.username && !($('.left .people').children(`#${name}`).length)) {
                    $.getJSON('/anyuser?username='+name)
                    .done(user => {
                        $('.left .people').prepend(
                        `<li class="person" data-chat="${chat._id}" id="${user.username}" data-user="${user.username}">
                            <img src="${user.avatar}" alt="" />
                            <span class="name">${user.firstname} ${user.lastname}</span>
                            <span class="time">2:09 PM</span>
                            <span class="preview"></span>
                        </li>`
                        );
                        $('.right .chat-room').prepend(
                            `<div class="chat" data-chat="${chat._id}" data-user="${user.username}">
                                <div class="conversation-start">
                                    <span>Today, 7:48 AM</span>
                                </div>
                                </div>`
                                );
                        $.getJSON(`/fetchMessages?chatid=${chat._id}`)
                        .done(messages => {
                            messages.reverse().forEach(msg => {
                                var sender;
                                if (msg.sender == currentUser._id) {
                                    sender = 'me';
                                } else {
                                    sender = 'you';
                                }
                                $('.right [data-chat='+chat._id+']').append(
                                `<div class="bubble ${sender}">
                                    ${msg.content}
                                </div>`
                                );
                            })
                        }).fail(err => console.log(err));
                    }).fail(err => console.log(err));
                }
            })
        }
    })
    setTimeout(function() {
        friends.forEach(function(friend) {
            if (!($('.left .people').children(`#${friend.username}`).length)) {
                $('.left .people .friendList').append(
                `<li class="person" id="${friend.username}" data-room="">
                    <img src="${friend.avatar}" alt="" />
                    <span class="name">${friend.firstname} ${friend.lastname}</span>
                    <span class="preview"></span>
                </li>`
                );
            }
        });
    }, 2000);

})
.fail(err => console.log(err));

    
    
    

    // show online users
    socket.on('userIds', function(data) {
        console.log(data);
    })

    $('.top .search').click(function() {
        $('.left .people .friendList').toggle();
    })

    $('.left .people').on("click", ".person", function() {
        if ($(this).parent(".friendList").length) {
            $(this).remove();
        }
        var receiver = $(this).attr('id');
        var sender = currentUser.username;
        var that = this;
        var participants = [receiver, sender];
        $.post('/start-conversation', {participants: participants})
        .then((conversation) => {
            var receiver;
            conversation.participants.forEach(name => {
                if (name !== currentUser.username) {
                    receiver = name;
                }
            });
            var foundUser = $.getJSON(`/anyuser?username=${receiver}`);
            currentConversation = conversation;
            return foundUser;
        }).then(function(user) {
            $('.left .people').children('.person').removeClass('active');
            $('.right .chat-room').children('.chat').removeClass('active-chat');
            $('.right span.name').text(`${user.firstname} ${user.lastname}`);
            $('.right .write input').attr({'data-to': user.username, 'data-chatid': currentConversation._id});
            if (!($('.left .people').children(`#${user.username}`).length)) {
                $('.left .people').prepend(
                    `<li class="person active" data-chat="${currentConversation._id}" id="${user.username}" data-user="${user.username}">
                        <img src="${user.avatar}" alt="" />
                        <span class="name">${user.firstname} ${user.lastname}</span>
                        <span class="time">2:09 PM</span>
                        <span class="preview"></span>
                    </li>`
                    );
                $('.right .chat-room').prepend(
                    `<div class="chat active-chat" data-chat="${currentConversation._id}" data-user="${user.username}">
                        <div class="conversation-start">
                            <span>Today, 7:48 AM</span>
                        </div>
                        
                    </div>`
                    );
            } else {
                $(`.left .people > #${user.username}`).addClass('active');
                $(`.left .people > #${user.username}`).insertBefore($('.left .people :first'));
                $(`.right .chat-room > div[data-user=${user.username}]`).addClass('active-chat');
                $(`.right .chat-room > div[data-user=${user.username}]`).insertBefore($('.right .chat-room :first'));
            }
            $('.left .people .friendList').hide();
            activeChat = document.querySelector('.active-chat');

            activeChat.scrollTop = activeChat.scrollHeight;
        })
        .fail(err => console.log(err));
    });
    var activeChat;
    $(document).on("mousedown", ".left .people > .person", function() {
        this.classList.contains('active') || setAciveChat(this);
    });
    function setAciveChat(f) {
      $('.right .write input').attr({"data-to": $(f).attr("data-user"), "data-chatid": $(f).attr("data-chat")});
      if (friends.list.querySelector('.active')) {
        friends.list.querySelector('.active').classList.remove('active');
      }
      f.classList.add('active');
      chat.current = chat.container.querySelector('.active-chat');
      chat.person = f.getAttribute('data-chat');
      if (chat.current) {
        chat.current.classList.remove('active-chat');
      }
      if (chat.container.querySelector('[data-chat="' + chat.person + '"]')) {
        chat.container.querySelector('[data-chat="' + chat.person + '"]').classList.add('active-chat'); 
      }
      friends.name = f.querySelector('.name').innerText;
      chat.name.innerHTML = friends.name;

      activeChat = document.querySelector('.active-chat');

      activeChat.scrollTop = activeChat.scrollHeight;
    }

    $('.right .write input').on("keypress", function(e) {
        if (e.which === 13 && $(this).attr("data-to")) {
            var msg = $(this).val(),
                sender = currentUser.username,
                recipient = $(this).attr("data-to"),
                conversationId = $(this).attr("data-chatid");

            var msgData = {msg: msg, recipient: recipient, sender: sender, conversationId: conversationId};
            socket.emit("send-message", msgData);
            $.post('/sendMessage', msgData)
            .done(msg => {
                console.log(msg);
                $(`.right .chat-room > div[data-chat=${msg.conversationId}]`).append(
                    `<div class="bubble me">
                        ${msg.content}
                    </div>`
                    );
            })
            .fail(err => console.log(err));
            $(this).val("");

            activeChat = document.querySelector('.active-chat');

            activeChat.scrollTop = activeChat.scrollHeight;

        }
    })

    socket.on('new-message', function(data) {
        $('.right .write input').attr({'data-to': data.username, 'data-chatid': data.conversationId});
        if (!($('.left .people').children(`#${data.username}`).length)) {
            $('.left .people').children('.person').removeClass('active');
            $('.right .chat-room').children('.chat').removeClass('active-chat');
            $('.right span.name').text(`${data.firstname} ${data.lastname}`);
            $('.left .people').prepend(
                    `<li class="person active" data-chat="${data.conversationId}" id="${data.username}" data-user="${data.username}">
                        <img src="${data.avatar}" alt="" />
                        <span class="name">${data.firstname} ${data.lastname}</span>
                        <span class="time">2:09 PM</span>
                        <span class="preview"></span>
                    </li>`
                    );
                $('.right .chat-room').prepend(
                    `<div class="chat active-chat" data-chat="${data.conversationId}" data-user="${data.username}">
                        <div class="conversation-start">
                            <span>Today, 7:48 AM</span>
                        </div>
                    </div>`
                    );
        } else {
            $(`.left .people > #${data.username}`).addClass('active');
            $(`.left .people > #${data.username}`).insertBefore($('.left .people :first'));
            $(`.right .chat-room > div[data-user=${data.username}]`).addClass('active-chat');
            $(`.right .chat-room > div[data-user=${data.username}]`).insertBefore($('.right .chat-room :first'));
        }
        
        $(`.right .chat-room > div[data-user=${data.username}]`).append(
            `<div class="bubble you">
                ${data.msg}
            </div>`
            );

        activeChat = document.querySelector('.active-chat');

        activeChat.scrollTop = activeChat.scrollHeight;
    })

    $('.new-chat').click(function() {
        $('.left').toggle();
    })

    if (window.matchMedia( "(min-width: 500px)" )) {
        $('.left .people').on("click", ".person", function() {
            $('.left').toggle();
        });
    }

</script>